import "../styles/globals.css";
import type { AppProps } from "next/app";
import Head from "next/head";
import {
  MantineProvider,
  ColorSchemeProvider,
  ColorScheme,
} from "@mantine/core";

import "@rainbow-me/rainbowkit/styles.css";
import {
  darkTheme,
  getDefaultWallets,
  RainbowKitProvider,
} from "@rainbow-me/rainbowkit";
import { chain, configureChains, createClient, WagmiConfig , useEnsAvatar,useEnsName,useAccount} from "wagmi";
import { alchemyProvider } from "wagmi/providers/alchemy";
import { publicProvider } from "wagmi/providers/public";
import { studioProvider } from "livepeer/providers/studio";
import {
  LivepeerConfig,
  ThemeConfig,
  createReactClient,
} from "@livepeer/react";

const livepeerClient = createReactClient({
  provider: studioProvider({
    apiKey: "88572693-9dd7-4518-9d74-5c126d87207c",
  }),
});

const livepeerTheme = {
  colors: {
    accent: "rgb(0, 145, 255)",
    containerBorderColor: "rgba(0, 145, 255, 0.9)",
  },
  fonts: {
    display: "Inter",
  },
};

const { chains, provider } = configureChains(
  [chain.polygonMumbai,chain.goerli],
  [publicProvider()]
);

const { connectors } = getDefaultWallets({
  appName: "DeUniversity",
  chains,
});

const wagmiClient = createClient({
  autoConnect: true,
  connectors,
  provider,
});

import { useState } from "react";
import { NotificationsProvider } from "@mantine/notifications";

export default function App({ Component, pageProps }: AppProps) {
  const [colorScheme, setColorScheme] = useState<ColorScheme>("light");
  const toggleColorScheme = (value?: ColorScheme) =>
    setColorScheme(value || (colorScheme === "dark" ? "light" : "dark"));
  return (
    <div>
      <Head>
        <title>DeUniversity</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <WagmiConfig client={wagmiClient}>
        <RainbowKitProvider chains={chains} theme={darkTheme()}>
          <ColorSchemeProvider
            colorScheme={colorScheme}
            toggleColorScheme={toggleColorScheme}
          >
            <MantineProvider
              withGlobalStyles
              withNormalizeCSS
              theme={{
                /** Put your mantine theme override here */
                colorScheme,
              }}
            >
              <NotificationsProvider>
                <LivepeerConfig client={livepeerClient} theme={livepeerTheme}>
                  <Component {...pageProps} />
                </LivepeerConfig>
              </NotificationsProvider>
            </MantineProvider>
          </ColorSchemeProvider>
        </RainbowKitProvider>
      </WagmiConfig>
    </div>
  );
}
